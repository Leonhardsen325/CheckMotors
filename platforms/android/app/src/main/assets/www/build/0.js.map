{"version":3,"sources":["../../src/pages/recuperar-senha/recuperar-senha.module.ts","../../src/pages/recuperar-senha/recuperar-senha.ts","../../src/validators/email.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { RecuperarSenhaPage } from './recuperar-senha';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RecuperarSenhaPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(RecuperarSenhaPage),\r\n  ],\r\n})\r\nexport class RecuperarSenhaPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/recuperar-senha/recuperar-senha.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, AlertController } from 'ionic-angular';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { AuthProvider } from '../../providers/auth/auth';\r\nimport { EmailValidator } from '../../validators/email';\r\n\r\n\r\n\r\n/**\r\n * Generated class for the RecuperarSenhaPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-recuperar-senha',\r\n  templateUrl: 'recuperar-senha.html',\r\n})\r\nexport class RecuperarSenhaPage {\r\n\r\n  backgrounds = [\r\n    'assets/img/background/background-1.jpg',\r\n    'assets/img/background/background-2.jpg',\r\n    'assets/img/background/background-3.jpg',\r\n    'assets/img/background/background-4.jpg'\r\n  ];\r\n\r\n  public resetPasswordForm: FormGroup;\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams,\r\n              public authProvider: AuthProvider,\r\n              public formBuilder: FormBuilder,\r\n              public alertCtrl: AlertController) {\r\n\r\n              this.resetPasswordForm = formBuilder.group({\r\n                email: ['',\r\n                Validators.compose([Validators.required, EmailValidator.isValid])],\r\n              });\r\n  }\r\n\r\n  resetPassword(){\r\n    if (!this.resetPasswordForm.valid){\r\n      console.log(this.resetPasswordForm.value);\r\n    } else {\r\n      this.authProvider.resetPassword(this.resetPasswordForm.value.email)\r\n      .then((user) => {\r\n        let alert = this.alertCtrl.create({\r\n          message: \"We sent you a reset link to your email\",\r\n          buttons: [\r\n            {\r\n              text: \"Ok\",\r\n              role: 'cancel',\r\n              handler: () => { this.navCtrl.pop(); }\r\n            }\r\n          ]\r\n        });\r\n        alert.present();\r\n  \r\n      }, (error) => {\r\n        var errorMessage: string = error.message;\r\n        let errorAlert = this.alertCtrl.create({\r\n          message: errorMessage,\r\n          buttons: [{ text: \"Ok\", role: 'cancel' }]\r\n        });\r\n        errorAlert.present();\r\n      });\r\n    }\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad RecuperarSenhaPage');\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/recuperar-senha/recuperar-senha.ts","import { FormControl } from '@angular/forms';\r\n\r\nexport class EmailValidator {\r\n  static isValid(control: FormControl) {\r\n    const re = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/.test(\r\n      control.value\r\n    );\r\n\r\n    if (re) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      invalidEmail: true,\r\n    };\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email.ts"],"sourceRoot":""}