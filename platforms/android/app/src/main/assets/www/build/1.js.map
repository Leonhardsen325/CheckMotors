{"version":3,"sources":["../../src/pages/signup/signup.module.ts","../../src/pages/signup/signup.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACV;AAUtC;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAR5B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAU;aACX;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,2DAAU,CAAC;aACrC;SACF,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZa;AAC1C,2GAA2G;AACjC;AAK1E,8CAA8C;AACW;AAEzD,qEAAqE;AAEqB;AAQ1F;IAaE;QACY,oCAAoC;QAC7B,WAAwB,EACxB,OAAsB,EACtB,SAAoB,EACpB,IAAkB,EAClB,SAA0B;QAJ1B,gBAAW,GAAX,WAAW,CAAa;QACxB,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,SAAI,GAAJ,IAAI,CAAc;QAClB,cAAS,GAAT,SAAS,CAAiB;QAjB7C,gBAAW,GAAG;YACZ,wCAAwC;YACxC,wCAAwC;YACxC,wCAAwC;YACxC,wCAAwC;SACzC,CAAC;QAEK,SAAI,GAAG,EAAU,CAAC;QAab,IAAI,UAAU,GAAG,yIAAyI,CAAC;QAG3J,4CAA4C;QAC5C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,KAAK,EAAE,CAAC,EAAE,EAAE,+EAAU,CAAC,OAAO,CAAC,CAAC,+EAAU,CAAC,QAAQ,EAAE,+EAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACtF,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,+EAAU,CAAC,QAAQ,EAAE,+EAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9D,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,+EAAU,CAAC,QAAQ,EAAE,+EAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAClE,CAAC,CAAC;IAEf,CAAC;IAID,6BAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAED,0BAAK,GAAL,UAAM,KAAK,EAAE,OAAO;QAClB,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAC7B,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,OAAO;YACjB,OAAO,EAAE,CAAC,QAAQ,CAAC;SACpB,CAAC,CAAC;QACH,EAAE,CAAC,OAAO,EAAE,CAAC;IACf,CAAC;IAEK,6BAAQ,GAAd,UAAe,IAAU;;;;;;6BACnB,KAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,GAAjC,wBAAiC;wBACrC,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE,qCAAqC,CAAC,CAAC;;;;wBAGpD,qBAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;;wBAAvC,MAAM,GAAG,SAA8B;wBAC7C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;;;;wBAGjC,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE,OAAK,CAAC,OAAO,CAAC,CAAC;;;;;;KAMpD;IAED,mCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;IAC3C,CAAC;IApEU,UAAU;QAJtB,wEAAS,CAAC;YACT,QAAQ,EAAE,aAAa;WACG;SAC3B,CAAC;iFAgB2C;YACf,iEAAa;YACX,0EAAS;YACd,sEAAY;YACP,OAAe;OAnBlC,UAAU,CAsEtB;IAAD,CAAC;AAAA;SAtEY,UAAU,e","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { SignupPage } from './signup';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SignupPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(SignupPage),\r\n  ],\r\n})\r\nexport class SignupPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup/signup.module.ts","import { Component } from '@angular/core';\r\n// Nesse import adicionamos o AlertController que será usado para apresentar a mensagem do nosso aplicativo\r\nimport { IonicPage, NavController, NavParams, AlertController } from 'ionic-angular';\r\n\r\n// Importação do nosso modelo de usuário\r\nimport { User } from '../../models/user';\r\n\r\n// Importação do nosso serviço de autenticação\r\nimport { AuthProvider } from '../../providers/auth/auth';\r\n\r\n// Importação da página que o usuário será redirecionado após o login\r\n\r\nimport { FormGroup, FormBuilder, Validators } from '../../../node_modules/@angular/forms';\r\n\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-signup',\r\n  templateUrl: 'signup.html',\r\n})\r\nexport class SignupPage {\r\n\r\n  backgrounds = [\r\n    'assets/img/background/background-1.jpg',\r\n    'assets/img/background/background-2.jpg',\r\n    'assets/img/background/background-3.jpg',\r\n    'assets/img/background/background-4.jpg'\r\n  ];\r\n\r\n  public user = {} as User;\r\n\r\n  signupForm : FormGroup;\r\n\r\n  constructor(\r\n              //Responsável por criar o formulário\r\n              public formBuilder: FormBuilder,\r\n              public navCtrl: NavController, \r\n              public navParams: NavParams,\r\n              public auth: AuthProvider,\r\n              public alertCtrl: AlertController,\r\n              ) {\r\n\r\n              let emailRegex = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/gi;\r\n \r\n\r\n              //Atribuindo o form group para o signup form\r\n              this.signupForm = this.formBuilder.group({\r\n                email: ['', Validators.compose([Validators.required, Validators.pattern(emailRegex)])],\r\n                password: ['', [Validators.required, Validators.minLength(6)]],\r\n                passwordTwo: ['', [Validators.required, Validators.minLength(6)]]\r\n              });\r\n\r\n  }\r\n\r\n  \r\n\r\n  onSubmit() : void {\r\n    console.log(this.signupForm.value);\r\n  }\r\n\r\n  alert(title, message) {\r\n    let al = this.alertCtrl.create({\r\n      title: title,\r\n      subTitle: message,\r\n      buttons: ['Fechar']\r\n    });\r\n    al.present();\r\n  }\r\n\r\n  async register(user: User) {\r\n    if (user.password != user.passwordTwo) {\r\n    this.alert(\"Erro ao cadastrar\", \"É necessário informar a mesma senha\");\r\n    } else {\r\n      try {\r\n        const result = await this.auth.register(user);\r\n        this.navCtrl.setRoot('HomePage');\r\n      \r\n      } catch (error) {\r\n        this.alert(\"Erro ao cadastrar\", error.message);\r\n      }\r\n    \r\n    }\r\n\r\n    \r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad SignupPage');\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup/signup.ts"],"sourceRoot":""}